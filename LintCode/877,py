from collections import defaultdict

class Solution:
    """
    @param nums: a list of integer
    @return: return a boolean
    """
    def splitArray(self, nums):
        if len(nums) < 7:
            return False
        
        n = len(nums)
        sums = [nums[0]]
        zeros_flag = True
        if nums[0] != 0:
            zeros_flag = False
            zeros_end = 0
        else:
            zeros_end = 1
        for num in nums[1:]:
            s = sums[-1] + num
            sums.append(s)
            if zeros_flag:
                if s == 0:
                    zeros_end += 1
                else:
                    zeros_flag = False
        
        if zeros_end == n:
            return True
            
        for j in range(max(3, zeros_end), n - 2):
            parts = set()
            for i in range(1, j - 1):
                if i != 1 and nums[i] == 0 and nums[i + 1] == 0:
                    continue
                p1 = sums[i - 1]
                if p1 == sums[j - 1] - sums[i]:
                    parts.add(p1)
            for k in range(j + 2, n - 1):
                if k != j + 2 and nums[k] == 0 and nums[k + 1] == 0:
                    continue
                p3 = sums[k - 1] - sums[j]
                if p3 == sums[n - 1] - sums[k]:
                    if p3 in parts:
                        return True
                        
        return False
        
# class Solution:
#     """
#     @param nums: a list of integer
#     @return: return a boolean
#     """
#     def splitArray(self, nums):
#         if len(nums) < 7:
#             return False
            
#         n = len(nums)
        
#         for i in range(1, n - 5):
#             p1 = sum(nums[:i])
#             for j in range(i + 2, n - 3):
#                 p2 = sum(nums[i+1:j])
#                 if p1 != p2:
#                     continue
#                 for k in range(j + 2, n):
#                     p3 = sum(nums[j+1:k])
#                     p4 = sum(nums[k+1:])
#                     if p1 == p2 == p3 == p4:
#                         return True
                        
#         return False